@model DreamDay.Models.ViewModels.CoupleDashboardViewModel
@{
    ViewData["Title"] = "Couple Dashboard";
}

<div class="container my-5 couple-dashboard-page">
    <h1 class="text-center mb-4 dashboard-title">Welcome to Your Wedding Dashboard</h1>

    <!-- Big Overview + Messaging Card -->
    <div class="overview-card card shadow-sm mb-5 p-4">
        <div class="d-flex justify-content-between align-items-start mb-4">
            <div>
                <h3>Wedding Overview</h3>

                @if (Model.Wedding == null)
                {
                    <p class="text-danger">No wedding information found. Please contact support.</p>
                }
                else
                {
                    <p><strong>Title:</strong> @Model.Wedding.Title</p>
                    <p><strong>Date:</strong> @Model.Wedding.WeddingDate.ToShortDateString()</p>
                    <p><strong>Venue:</strong> @Model.Wedding.Venue</p>
                }
            </div>

            <button class="message-toggle-btn ms-auto" onclick="toggleMessagePanel()">
                <i class="fas fa-envelope"></i>
            </button>
        </div>

        <div id="messagePanel" style="display:none;" class="message-card-inner mt-3">
            <h5 class="text-center mb-3">Messages</h5>
            <div id="messageList" class="message-list">
                <!-- Previous messages load here -->
            </div>

            <form id="messageForm" onsubmit="sendMessage(event)" class="mt-3">
                <div class="form-group mb-2">
                    <textarea id="messageContent" class="form-control" placeholder="Type your message..." required style="resize: none;"></textarea>
                </div>
                <button type="submit" class="btn btn-cream w-100">Send</button>
            </form>
        </div>
    </div>

    <!-- Four Small Cards Below -->
    <div class="row g-4">
        <div class="col-md-3">
            <div class="feature-card card shadow-sm h-100">
                <div class="card-body d-flex flex-column justify-content-between text-center">
                    <div>
                        <h5>Checklist Progress</h5>
                        <p>@Model.CompletedTasks / @Model.TotalTasks Tasks Completed</p>
                    </div>
                    <div class="button-container mt-auto">
                        <a class="btn btn-cream" href="/ChecklistManagement">View Checklist</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="feature-card card shadow-sm h-100">
                <div class="card-body d-flex flex-column justify-content-between text-center">
                    <div>
                        <h5>Guest Summary</h5>
                        <p>@Model.TotalGuests Invited, @Model.AcceptedGuests Accepted</p>
                    </div>
                    <div class="button-container mt-auto">
                        <a class="btn btn-cream" href="/GuestManagement">Manage Guests</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="feature-card card shadow-sm h-100">
                <div class="card-body d-flex flex-column justify-content-between text-center">
                    <div>
                        <h5>Budget Summary</h5>
                        <p>Estimated: $@Model.EstimatedBudget<br>Actual: $@Model.ActualBudget</p>
                    </div>
                    <div class="button-container mt-auto">
                        <a class="btn btn-cream" href="/BudgetManagement">Manage Budget</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="feature-card card shadow-sm h-100">
                <div class="card-body d-flex flex-column justify-content-between text-center">
                    <div>
                        <h5>Timeline Events</h5>
                        <p>Plan and track your big day’s timeline easily.</p>
                    </div>
                    <div class="button-container mt-auto">
                        <a class="btn btn-cream" href="/Timeline">Manage Timeline</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleMessagePanel() {
            const panel = document.getElementById('messagePanel');
            if (panel.style.display === "none") {
                panel.style.display = "block";
                loadMessages();
            } else {
                panel.style.display = "none";
            }
        }

        async function loadMessages() {
            const weddingId = @((Model.Wedding != null) ? Model.Wedding.WeddingId.ToString() : "null");
            if (weddingId === "null") return;

            const response = await fetch('/CoupleDashboard/GetMessages?weddingId=' + weddingId);
            const messages = await response.json();
            const list = document.getElementById('messageList');
            list.innerHTML = '';
            messages.forEach(m => {
                const div = document.createElement('div');
                div.classList.add('mb-2');
                div.innerHTML = `<strong>${m.senderEmail}:</strong> ${m.content} <br/><small class="text-muted">${m.sentTime}</small>`;
                list.appendChild(div);
            });
        }

        async function sendMessage(event) {
            event.preventDefault();
            const content = document.getElementById('messageContent').value;
            const weddingId = @((Model.Wedding != null) ? Model.Wedding.WeddingId.ToString() : "null");

            if (weddingId === "null") return;

            const response = await fetch('/CoupleDashboard/SendMessage', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ weddingId, content })
            });

            if (response.ok) {
                document.getElementById('messageContent').value = '';
                loadMessages();
            }
        }
    </script>
}


